<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
				http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context.xsd
				http://www.springframework.org/schema/security 
				http://www.springframework.org/schema/security/spring-security-4.1.xsd
				http://www.springframework.org/schema/mvc 
				http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/" access="permitAll" />
		<security:intercept-url pattern="/index"
			access="hasRole('ROLE_USER')" />

		<security:form-login login-page="/login"
			default-target-url="/index" 
			login-processing-url="/j_spring_security_check"
			authentication-failure-url="/accessDenied" />
		<security:logout invalidate-session="true"
			logout-success-url="/" logout-url="/logout" />
		<security:custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" /> 
		<security:csrf disabled="true" />
	</security:http>
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider >
			<security:jdbc-user-service
				data-source-ref="dataSource" id="usersService"
				users-by-username-query="select username,passwd as password,active as enabled from user where username = ?"
				authorities-by-username-query="select user.username,role.name from user,role,user_role where user.id=user_role.user_id and user_role.role_id=role.id and user.username=?" />
		</security:authentication-provider>
	</security:authentication-manager>
	
    <!-- 认证过滤器 -->  
    <bean id="filterSecurityInterceptor"  
        class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">  
        <!-- 用户拥有的权限 -->  
        <property name="accessDecisionManager" ref="accessDecisionManager" />  
        <!-- 用户是否拥有所请求资源的权限 -->  
        <property name="authenticationManager" ref="authenticationManager" />  
        <!-- 资源与权限对应关系 -->  
        <property name="securityMetadataSource" ref="securityMetadataSource" />  
    </bean>
    
    <!-- 授权管理器 -->  
    <bean class="cn.myth.MoodBlog.security.MyAccessDecisionManager" id="accessDecisionManager" />
    
        <!--自定义的切入点-->  
    <bean id="securityMetadataSource"  
        class="cn.myth.MoodBlog.security.MyFilterInvocationSecurityMetadataSource">  
        <property name="builder" ref="builder"></property>  
    </bean> 
    
    
    <bean id="builder" class="cn.myth.MoodBlog.security.JdbcRequestMapBulider">   
        <property name="dataSource" ref="dataSource" />   
        <property name="resourceQuery"  
        value="select re.res_string,r.name from role r,resc re,resc_role rr where   
        r.id=rr.role_id and re.id=rr.resc_id" />
    </bean>
</beans>